<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.peyton.plum.mall.mapper.product.ShopProductSkuDetailMapper">
	<resultMap id="ResultShopProductSkuDetailMap" type="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="product_id" property="productId" jdbcType="BIGINT"/>
		<result column="skus" property="skus" jdbcType="LONGVARCHAR"/>
		<result column="cover" property="cover" jdbcType="VARCHAR"/>
		<result column="unique_code" property="uniqueCode" jdbcType="VARCHAR"/>
		<result column="bar_code" property="barCode" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="min_price" property="minPrice" jdbcType="DECIMAL"/>
		<result column="cost_price" property="costPrice" jdbcType="DECIMAL"/>
		<result column="weight" property="weight" jdbcType="DECIMAL"/>
		<result column="volume" property="volume" jdbcType="DECIMAL"/>
		<result column="brokerage" property="brokerage" jdbcType="DECIMAL"/>
		<result column="brokerage_two" property="brokerageTwo" jdbcType="DECIMAL"/>
		<result column="pink_price" property="pinkPrice" jdbcType="DECIMAL"/>
		<result column="pink_stock" property="pinkStock" jdbcType="INTEGER"/>
		<result column="bargain_price" property="bargainPrice" jdbcType="DECIMAL"/>
		<result column="bargain_stock" property="bargainStock" jdbcType="INTEGER"/>
		<result column="seckill_price" property="seckillPrice" jdbcType="DECIMAL"/>
		<result column="seckill_stock" property="seckillStock" jdbcType="INTEGER"/>
		<result column="warehouse_id" property="warehouseId" jdbcType="INTEGER"/>
		<result column="warehouse_explain" property="warehouseExplain" jdbcType="VARCHAR"/>
		<result column="is_integral" property="isIntegral" jdbcType="TINYINT"/>
		<result column="integral" property="integral" jdbcType="INTEGER"/>
		<result column="give_integral" property="giveIntegral" jdbcType="INTEGER"/>
		<association property="product" javaType="cn.peyton.plum.mall.pojo.product.ShopProduct"
					 column="product_id" select="cn.peyton.plum.mall.mapper.product.ShopProductMapper.selectForeignKeyById"/>
	</resultMap>

	<sql id="Column_tb_shop_product_sku_detail_List">
		`id`,`product_id`,`skus`,`cover`,`unique_code`,`bar_code`,`price`,`min_price`,`cost_price`,`weight`,`volume`,`brokerage`,
		    `brokerage_two`,`pink_price`,`pink_stock`,`bargain_price`,`bargain_stock`,`seckill_price`,`seckill_stock`,`warehouse_id`,
		    `warehouse_explain`,`is_integral`,`integral`,`give_integral`
	</sql>

	<!-- 根据Id 简单查找对象 -->
	<resultMap id="result_simple_spsd_map" type="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="product_id" property="productId" jdbcType="BIGINT"/>
		<result column="skus" property="skus" jdbcType="VARCHAR"/>
		<result column="cover" property="cover" jdbcType="VARCHAR"/>
		<result column="unique_code" property="uniqueCode" jdbcType="VARCHAR"/>
		<result column="bar_code" property="barCode" jdbcType="VARCHAR"/>
		<result column="min_price" property="minPrice" jdbcType="DECIMAL"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="weight" property="weight" jdbcType="DECIMAL"/>
		<result column="volume" property="volume" jdbcType="DECIMAL"/>
		<result column="is_integral" property="isIntegral" jdbcType="TINYINT"/>
		<result column="integral" property="integral" jdbcType="INTEGER"/>
		<result column="give_integral" property="giveIntegral" jdbcType="INTEGER"/>
		<association property="product" javaType="cn.peyton.plum.mall.pojo.product.ShopProduct"
					 column="product_id" select="cn.peyton.plum.mall.mapper.product.ShopProductMapper.selectForeignKeyById"/>
	</resultMap>
	<sql id="column_simple_spsd_list">
		`id`,`product_id`,`skus`,`cover`,`unique_code`,`bar_code`,`min_price`,`price`,`weight`,`volume`,
		 	`is_integral`,`integral`,`give_integral`
	</sql>

	<!-- 根据 商品ID 查找 商品规格明细对象集合  -->
	<resultMap id="result_spsd_st_map" type="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="product_id" property="productId" jdbcType="BIGINT"/>
		<result column="skus" property="skus" jdbcType="VARCHAR"/>
		<result column="cover" property="cover" jdbcType="VARCHAR"/>
		<result column="unique_code" property="uniqueCode" jdbcType="VARCHAR"/>
		<result column="bar_code" property="barCode" jdbcType="VARCHAR"/>
		<result column="min_price" property="minPrice" jdbcType="DECIMAL"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="cost_price" property="costPrice" jdbcType="DECIMAL"/>
		<result column="weight" property="weight" jdbcType="DECIMAL"/>
		<result column="volume" property="volume" jdbcType="DECIMAL"/>
		<result column="warehouse_id" property="warehouseId" jdbcType="INTEGER"/>
		<result column="warehouse_explain" property="warehouseExplain" jdbcType="VARCHAR"/>
		<association property="product" javaType="cn.peyton.plum.mall.pojo.product.ShopProduct"
					 column="product_id" select="cn.peyton.plum.mall.mapper.product.ShopProductMapper.selectForeignKeyById"/>
		<association property="shopStock" javaType="cn.peyton.plum.mall.pojo.product.ShopStock"
					 column="stock_id" select="cn.peyton.plum.mall.mapper.product.ShopStockMapper.selectByPrimaryKey" />
	</resultMap>
	<!-- 后端 平台获取 -->
	<sql id="column_spsd_st_list">
		`id`,`product_id`,`stock_id`,`skus`,`cover`,`unique_code`,`bar_code`,`min_price`,`price`,`cost_price`,`weight`,`volume`,`warehouse_id`,`warehouse_explain`
	</sql>
	<!-- 前端 平台获取 -->
	<sql id="column_spsd_st_platform_list">
		`id`,`product_id`,`stock_id`,`skus`,`cover`,`unique_code`,`bar_code`,`min_price`,`price`,`weight`,`volume`,`warehouse_id`,`warehouse_explain`
	</sql>

	<insert id="insertSelective" parameterType="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into `tb_shop_product_sku_detail`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="productId != null">`product_id`,</if>
			<if test="skus != null">`skus`,</if>
			<if test="cover != null">`cover`,</if>
			<if test="uniqueCode != null">`unique_code`,</if>
			<if test="barCode != null">`bar_code`,</if>
			<if test="price != null">`price`,</if>
			<if test="minPrice != null">`min_price`,</if>
			<if test="costPrice != null">`cost_price`,</if>
			<if test="weight != null">`weight`,</if>
			<if test="volume != null">`volume`,</if>
			<if test="brokerage != null">`brokerage`,</if>
			<if test="brokerageTwo != null">`brokerage_two`,</if>
			<if test="pinkPrice != null">`pink_price`,</if>
			<if test="pinkStock != null">`pink_stock`,</if>
			<if test="bargainPrice != null">`bargain_price`,</if>
			<if test="bargainStock != null">`bargain_stock`,</if>
			<if test="seckillPrice != null">`seckill_price`,</if>
			<if test="seckillStock != null">`seckill_stock`,</if>
			<if test="warehouseId != null">`warehouse_id`,</if>
			<if test="warehouseExplain != null">`warehouse_explain`,</if>
			<if test="isIntegral != null">`is_integral`,</if>
			<if test="integral != null">`integral`,</if>
			<if test="giveIntegral != null">`give_integral`,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="productId != null">#{productId},</if>
			<if test="skus != null">#{skus},</if>
			<if test="cover != null">#{cover},</if>
			<if test="uniqueCode != null">#{uniqueCode},</if>
			<if test="barCode != null">#{barCode},</if>
			<if test="price != null">#{price},</if>
			<if test="minPrice != null">#{minPrice},</if>
			<if test="costPrice != null">#{costPrice},</if>
			<if test="weight != null">#{weight},</if>
			<if test="volume != null">#{volume},</if>
			<if test="brokerage != null">#{brokerage},</if>
			<if test="brokerageTwo != null">#{brokerageTwo},</if>
			<if test="pinkPrice != null">#{pinkPrice},</if>
			<if test="pinkStock != null">#{pinkStock},</if>
			<if test="bargainPrice != null">#{bargainPrice},</if>
			<if test="bargainStock != null">#{bargainStock},</if>
			<if test="seckillPrice != null">#{seckillPrice},</if>
			<if test="seckillStock != null">#{seckillStock},</if>
			<if test="warehouseId != null">#{warehouseId},</if>
			<if test="warehouseExplain != null">#{warehouseExplain},</if>
			<if test="isIntegral != null">#{isIntegral},</if>
			<if test="integral != null">#{integral},</if>
			<if test="giveIntegral != null">#{giveIntegral},</if>
		</trim>
	</insert>

	<update id="updateSelective" parameterType="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		update `tb_shop_product_sku_detail`
		<set>
			<if test="productId != null">`product_id` = #{productId},</if>
			<if test="skus != null">`skus` = #{skus},</if>
			<if test="cover != null">`cover` = #{cover},</if>
			<if test="uniqueCode != null">`unique_code` = #{uniqueCode},</if>
			<if test="barCode != null">`bar_code` = #{barCode},</if>
			<if test="price != null">`price` = #{price},</if>
			<if test="minPrice != null">`min_price` = #{minPrice},</if>
			<if test="costPrice != null">`cost_price` = #{costPrice},</if>
			<if test="weight != null">`weight` = #{weight},</if>
			<if test="volume != null">`volume` = #{volume},</if>
			<if test="brokerage != null">`brokerage` = #{brokerage},</if>
			<if test="brokerageTwo != null">`brokerage_two` = #{brokerageTwo},</if>
			<if test="pinkPrice != null">`pink_price` = #{pinkPrice},</if>
			<if test="pinkStock != null">`pink_stock` = #{pinkStock},</if>
			<if test="bargainPrice != null">`bargain_price` = #{bargainPrice},</if>
			<if test="bargainStock != null">`bargain_stock` = #{bargainStock},</if>
			<if test="seckillPrice != null">`seckill_price` = #{seckillPrice},</if>
			<if test="seckillStock != null">`seckill_stock` = #{seckillStock},</if>
			<if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
			<if test="warehouseExplain != null">`warehouse_explain` = #{warehouseExplain},</if>
			<if test="isIntegral != null">`is_integral` = #{isIntegral},</if>
			<if test="integral != null">`integral` = #{integral},</if>
			<if test="giveIntegral != null">`give_integral` = #{giveIntegral},</if>
		</set>
		where id = #{id}
	</update>

	<update id="updateWarehouse" parameterType="map">
		update `tb_shop_product_sku_detail`
		<set>
			<if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
			<if test="warehouseExplain != null">`warehouse_explain` = #{warehouseExplain},</if>
		</set>
		where id = #{id}
	</update>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from `tb_shop_product_sku_detail`
		where `id` = #{id}
	</delete>

	<select id="repeat" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		select
		count(`id`)
		from `tb_shop_product_sku_detail`
		<where>
			<if test="id != null">
				and `id` = #{id}
			</if>
			<if test="productId != null">
				and `product_id` = #{productId}
			</if>
			<if test="skus != null">
				and `skus` = #{skus}
			</if>
			<if test="uniqueCode != null">
				and `unique_code` = #{uniqueCode}
			</if>
			<if test="barCode != null">
				and `bar_code` = #{barCode}
			</if>
			<if test="price != null">
				and `price` = #{price}
			</if>
			<if test="minPrice != null">
				and `min_price` = #{minPrice}
			</if>
			<if test="costPrice != null">
				and `cost_price` = #{costPrice}
			</if>
			<if test="weight != null">
				and `weight` = #{weight}
			</if>
			<if test="volume != null">
				and `volume` = #{volume}
			</if>
			<if test="brokerage != null">
				and `brokerage` = #{brokerage}
			</if>
			<if test="brokerageTwo != null">
				and `brokerage_two` = #{brokerageTwo}
			</if>
			<if test="pinkPrice != null">
				and `pink_price` = #{pinkPrice}
			</if>
			<if test="pinkStock != null">
				and `pink_stock` = #{pinkStock}
			</if>
			<if test="bargainPrice != null">
				and `bargain_price` = #{bargainPrice}
			</if>
			<if test="bargainStock != null">
				and `bargain_stock` = #{bargainStock}
			</if>
			<if test="seckillPrice != null">
				and `seckill_price` = #{seckillPrice}
			</if>
			<if test="seckillStock != null">
				and `seckill_stock` = #{seckillStock}
			</if>
			<if test="warehouseId != null">
				and `warehouse_id` = #{warehouseId}
			</if>
			<if test="warehouseExplain != null">
				and `warehouse_explain` = #{warehouseExplain}
			</if>
			<if test="isIntegral != null">
				and `is_integral` = #{isIntegral}
			</if>
			<if test="integral != null">
				and `integral` = #{integral}
			</if>
			<if test="giveIntegral != null">
				and `give_integral` = #{giveIntegral}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultShopProductSkuDetailMap"  parameterType="java.lang.Long">
		select
		<include refid="Column_tb_shop_product_sku_detail_List"/>
		from `tb_shop_product_sku_detail`
		where `id` = #{id}
	</select>

	<select id="selectByLikeAndObj" resultMap="ResultShopProductSkuDetailMap"  parameterType="map">
		select
		<include refid="Column_tb_shop_product_sku_detail_List"/>
		from `tb_shop_product_sku_detail`
		<where>
			<if test="record.productId != null">
				and `product_id` =#{record.productId}
			</if>
			<if test="record.uniqueCode != null">
				and `unique_code` like concat('%',#{record.uniqueCode},'%')
			</if>
			<if test="record.barCode != null">
				and `bar_code` like concat('%',#{record.barCode},'%')
			</if>
			<if test="record.price != null">
				and `price` like concat('%',#{record.price},'%')
			</if>
			<if test="record.minPrice != null">
				and `min_price` like concat('%',#{record.minPrice},'%')
			</if>
			<if test="record.costPrice != null">
				and `cost_price` like concat('%',#{record.costPrice},'%')
			</if>
			<if test="record.weight != null">
				and `weight` like concat('%',#{record.weight},'%')
			</if>
			<if test="record.volume != null">
				and `volume` like concat('%',#{record.volume},'%')
			</if>
			<if test="record.pinkPrice != null">
				and `pink_price` like concat('%',#{record.pinkPrice},'%')
			</if>
			<if test="record.pinkStock != null">
				and `pink_stock` like concat('%',#{record.pinkStock},'%')
			</if>
			<if test="record.bargainPrice != null">
				and `bargain_price` like concat('%',#{record.bargainPrice},'%')
			</if>
			<if test="record.bargainStock != null">
				and `bargain_stock` like concat('%',#{record.bargainStock},'%')
			</if>
			<if test="record.seckillPrice != null">
				and `seckill_price` like concat('%',#{record.seckillPrice},'%')
			</if>
			<if test="record.seckillStock != null">
				and `seckill_stock` like concat('%',#{record.seckillStock},'%')
			</if>
			<if test="record.warehouseId != null">
				and `warehouse_id` = #{record.warehouseId}
			</if>
			<if test="record.warehouseExplain != null">
				and `warehouse_explain` like concat('%',#{record.warehouseExplain},'%')
			</if>
			<if test="record.isIntegral != null">
				and `is_integral` = #{record.isIntegral}
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="selectByObj" resultMap="ResultShopProductSkuDetailMap"  parameterType="map">
		select
		<include refid="Column_tb_shop_product_sku_detail_List"/>
		from `tb_shop_product_sku_detail`
		<where>
			<if test="record.id != null">
				and `id` = #{record.id}
			</if>
			<if test="record.productId != null">
				and `product_id` = #{record.productId}
			</if>
			<if test="record.skus != null">
				and `skus` = #{record.skus}
			</if>
			<if test="record.cover != null">
				and `cover` = #{record.cover}
			</if>
			<if test="record.uniqueCode != null">
				and `unique_code` = #{record.uniqueCode}
			</if>
			<if test="record.barCode != null">
				and `bar_code` = #{record.barCode}
			</if>
			<if test="record.price != null">
				and `price` = #{record.price}
			</if>
			<if test="record.minPrice != null">
				and `min_price` = #{record.minPrice}
			</if>
			<if test="record.costPrice != null">
				and `cost_price` = #{record.costPrice}
			</if>
			<if test="record.weight != null">
				and `weight` = #{record.weight}
			</if>
			<if test="record.volume != null">
				and `volume` = #{record.volume}
			</if>
			<if test="record.brokerage != null">
				and `brokerage` = #{record.brokerage}
			</if>
			<if test="record.brokerageTwo != null">
				and `brokerage_two` = #{record.brokerageTwo}
			</if>
			<if test="record.pinkPrice != null">
				and `pink_price` = #{record.pinkPrice}
			</if>
			<if test="record.pinkStock != null">
				and `pink_stock` = #{record.pinkStock}
			</if>
			<if test="record.bargainPrice != null">
				and `bargain_price` = #{record.bargainPrice}
			</if>
			<if test="record.bargainStock != null">
				and `bargain_stock` = #{record.bargainStock}
			</if>
			<if test="record.seckillPrice != null">
				and `seckill_price` = #{record.seckillPrice}
			</if>
			<if test="record.seckillStock != null">
				and `seckill_stock` = #{record.seckillStock}
			</if>
			<if test="record.warehouseId != null">
				and `warehouse_id` = #{record.warehouseId}
			</if>
			<if test="record.warehouseExplain != null">
				and `warehouse_explain` = #{record.warehouseExplain}
			</if>
			<if test="record.isIntegral != null">
				and `is_integral` = #{record.isIntegral}
			</if>
			<if test="record.integral != null">
				and `integral` = #{record.integral}
			</if>
			<if test="record.giveIntegral != null">
				and `give_integral` = #{record.giveIntegral}
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="countByLike" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		select
		count(`id`)
		from `tb_shop_product_sku_detail`
		<where>
			<if test="productId != null">
				and `product_id` = #{productId}
			</if>
			<if test="uniqueCode != null">
				and `unique_code` like concat('%',#{uniqueCode},'%')
			</if>
			<if test="barCode != null">
				and `bar_code` like concat('%',#{barCode},'%')
			</if>
			<if test="price != null">
				and `price` like concat('%',#{price},'%')
			</if>
			<if test="minPrice != null">
				and `min_price` like concat('%',#{minPrice},'%')
			</if>
			<if test="costPrice != null">
				and `cost_price` like concat('%',#{costPrice},'%')
			</if>
			<if test="weight != null">
				and `weight` like concat('%',#{weight},'%')
			</if>
			<if test="volume != null">
				and `volume` like concat('%',#{volume},'%')
			</if>
			<if test="pinkPrice != null">
				and `pink_price` like concat('%',#{pinkPrice},'%')
			</if>
			<if test="pinkStock != null">
				and `pink_stock` like concat('%',#{pinkStock},'%')
			</if>
			<if test="bargainPrice != null">
				and `bargain_price` like concat('%',#{bargainPrice},'%')
			</if>
			<if test="bargainStock != null">
				and `bargain_stock` like concat('%',#{bargainStock},'%')
			</if>
			<if test="seckillPrice != null">
				and `seckill_price` like concat('%',#{seckillPrice},'%')
			</if>
			<if test="seckillStock != null">
				and `seckill_stock` like concat('%',#{seckillStock},'%')
			</if>
			<if test="warehouseId != null">
				and `warehouse_id` = #{warehouseId}
			</if>
			<if test="warehouseExplain != null">
				and `warehouse_explain` like concat('%',#{warehouseExplain},'%')
			</if>
			<if test="isIntegral != null">
				and `is_integral` = #{isIntegral}
			</if>
		</where>
	</select>

	<select id="count" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.product.ShopProductSkuDetail">
		select
		count(`id`)
		from `tb_shop_product_sku_detail`
		<where>
			<if test="id != null">
				and `id` = #{id}
			</if>
			<if test="productId != null">
				and `product_id` = #{productId}
			</if>
			<if test="skus != null">
				and `skus` = #{skus}
			</if>
			<if test="cover != null">
				and `cover` = #{cover}
			</if>
			<if test="uniqueCode != null">
				and `unique_code` = #{uniqueCode}
			</if>
			<if test="barCode != null">
				and `bar_code` = #{barCode}
			</if>
			<if test="price != null">
				and `price` = #{price}
			</if>
			<if test="minPrice != null">
				and `min_price` = #{minPrice}
			</if>
			<if test="costPrice != null">
				and `cost_price` = #{costPrice}
			</if>
			<if test="weight != null">
				and `weight` = #{weight}
			</if>
			<if test="volume != null">
				and `volume` = #{volume}
			</if>
			<if test="brokerage != null">
				and `brokerage` = #{brokerage}
			</if>
			<if test="brokerageTwo != null">
				and `brokerage_two` = #{brokerageTwo}
			</if>
			<if test="pinkPrice != null">
				and `pink_price` = #{pinkPrice}
			</if>
			<if test="pinkStock != null">
				and `pink_stock` = #{pinkStock}
			</if>
			<if test="bargainPrice != null">
				and `bargain_price` = #{bargainPrice}
			</if>
			<if test="bargainStock != null">
				and `bargain_stock` = #{bargainStock}
			</if>
			<if test="seckillPrice != null">
				and `seckill_price` = #{seckillPrice}
			</if>
			<if test="seckillStock != null">
				and `seckill_stock` = #{seckillStock}
			</if>
			<if test="warehouseId != null">
				and `warehouse_id` = #{warehouseId}
			</if>
			<if test="warehouseExplain != null">
				and `warehouse_explain` = #{warehouseExplain}
			</if>
			<if test="isIntegral != null">
				and `is_integral` = #{isIntegral}
			</if>
			<if test="integral != null">
				and `integral` = #{integral}
			</if>
			<if test="giveIntegral != null">
				and `give_integral` = #{giveIntegral}
			</if>
		</where>
	</select>

	<!--	-->
	<!-- 批量添加 规格明细对象 -->
	<insert id="batchInsert" parameterType="list" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into `tb_shop_product_sku_detail`
			(`product_id`,`min_price`,`price`,`cost_price`,`weight`,`volume`,`warehouse_explain`,`skus`,`unique_code`,`bar_code`,`cover`,`warehouse_id`)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.productId},#{item.minPrice},#{item.price},#{item.costPrice},#{item.weight},
			#{item.volume},#{item.warehouseExplain},#{item.skus},#{item.uniqueCode},#{item.barCode},#{item.cover},#{item.warehouseId})
		</foreach>
	</insert>

	<!-- 批量更新 规格明细对象 -->
	<update id="batchUpdate" parameterType="list">
		<foreach collection="list" item="item" separator=";" index="index" close="" open="">
			update `tb_shop_product_sku_detail`
			<set>
				`product_id` = #{item.productId},
				`min_price` = #{item.minPrice},
				`price` = #{item.price},
				`cost_price` = #{item.costPrice},
				`weight` = #{item.weight},
				`volume` = #{item.volume},
				`warehouse_explain` = #{item.warehouseExplain},
				`skus` = #{item.skus},
				`unique_code` = #{item.uniqueCode},
			    `bar_code` = #{item.barCode},
			    `cover` = #{item.cover},
			    `warehouse_id` = #{item.warehouseId}
			</set>
			where id = #{item.id}
		</foreach>
	</update>

	<!-- 根据Id 简单查找对象 -->
	<select id="selectSimpleById" resultMap="result_simple_spsd_map"  parameterType="java.lang.Long">
		select
			<include refid="column_simple_spsd_list"/>
		from `tb_shop_product_sku_detail`
		where `id` = #{id}
	</select>

	<!-- 根据商品Id 查找商品规格列表 后端-->
	<select id="selectByProductId" resultMap="result_spsd_st_map"  parameterType="java.lang.Long">
		select
		<include refid="column_spsd_st_list"/>
		from `tb_shop_product_sku_detail`
		where `product_id` = #{productId}
	</select>


</mapper>
