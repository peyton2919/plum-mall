<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.peyton.plum.mall.mapper.join.ShopRepaymentMapper">
	<resultMap id="ResultShopRepaymentMap" type="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="arrear_id" property="arrearId" jdbcType="BIGINT"/>
		<result column="money" property="money" jdbcType="DECIMAL"/>
		<result column="actual_payment" property="actualPayment" jdbcType="DECIMAL"/>
		<result column="status" property="status" jdbcType="TINYINT"/>
		<result column="repay_type" property="repayType" jdbcType="TINYINT"/>
		<result column="member_id" property="memberId" jdbcType="BIGINT"/>
		<result column="obj" property="obj" jdbcType="LONGVARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="INTEGER"/>
	</resultMap>

	<resultMap id="result_shop_repayment_simple_map" type="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="arrear_id" property="arrearId" jdbcType="BIGINT"/>
		<result column="money" property="money" jdbcType="DECIMAL"/>
		<result column="actual_payment" property="actualPayment" jdbcType="DECIMAL"/>
		<result column="status" property="status" jdbcType="TINYINT"/>
		<result column="repay_type" property="repayType" jdbcType="TINYINT"/>
		<result column="member_id" property="memberId" jdbcType="BIGINT"/>
		<result column="obj" property="obj" jdbcType="LONGVARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="INTEGER"/>
		<association property="member" column="member_id" javaType="cn.peyton.plum.mall.pojo.party.Member"
					 select="cn.peyton.plum.mall.mapper.party.MemberMapper.selectJoinById"/>
	</resultMap>

	<sql id="Column_tb_shop_repayment_List">
		`id`,`arrear_id`,`money`,`actual_payment`,`status`,`repay_type`,`member_id`,`obj`,`remark`,`create_time`
	</sql>

	<insert id="insertSelective" parameterType="cn.peyton.plum.mall.pojo.join.ShopRepayment" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into `tb_shop_repayment`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="arrearId != null">`arrear_id`,</if>
			<if test="money != null">`money`,</if>
			<if test="actualPayment != null">`actual_payment`,</if>
			<if test="status != null">`status`,</if>
			<if test="repayType != null">`repay_type`,</if>
			<if test="memberId != null">`member_id`,</if>
			<if test="obj != null">`obj`,</if>
			<if test="remark != null">`remark`,</if>
			<if test="createTime != null">`create_time`,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="arrearId != null">#{arrearId},</if>
			<if test="money != null">#{money},</if>
			<if test="actualPayment != null">#{actualPayment},</if>
			<if test="status != null">#{status},</if>
			<if test="repayType != null">#{repayType},</if>
			<if test="memberId != null">#{memberId},</if>
			<if test="obj != null">#{obj},</if>
			<if test="remark != null">#{remark},</if>
			<if test="createTime != null">#{createTime},</if>
		</trim>
	</insert>

	<update id="updateSelective" parameterType="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		update `tb_shop_repayment`
		<set>
			<if test="arrearId != null">`arrear_id` = #{arrearId},</if>
			<if test="money != null">`money` = #{money},</if>
			<if test="actualPayment != null">`actual_payment` = #{actualPayment},</if>
			<if test="status != null">`status` = #{status},</if>
			<if test="repayType != null">`repay_type` = #{repayType},</if>
			<if test="memberId != null">`member_id` = #{memberId},</if>
			<if test="obj != null">`obj` = #{obj},</if>
			<if test="remark != null">`remark` = #{remark},</if>
			<if test="createTime != null">`create_time` = #{createTime},</if>
		</set>
		where id = #{id}
	</update>

	<update id="batchUpdate" parameterType="list">
		update `tb_shop_repayment` set `status` = 1
		where `arrear_id` in
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</update>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from `tb_shop_repayment`
		where `id` = #{id}
	</delete>

	<select id="repeat" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		select
		count(`id`)
		from `tb_shop_repayment`
		<where>
			<if test="id != null">
				and `id` = #{id}
			</if>
			<if test="arrearId != null">
				and `arrear_id` = #{arrearId}
			</if>
			<if test="money != null">
				and `money` = #{money}
			</if>
			<if test="actualPayment != null">
				and `actual_payment` = #{actualPayment}
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
			<if test="repayType != null">
				and `repay_type` = #{repayType}
			</if>
			<if test="memberId != null">
				and `member_id` = #{memberId}
			</if>
			<if test="obj != null">
				and `obj` = #{obj}
			</if>
			<if test="remark != null">
				and `remark` = #{remark}
			</if>
			<if test="createTime != null">
				and `create_time` = #{createTime}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultShopRepaymentMap"  parameterType="java.lang.Long">
		select
		<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		where `id` = #{id}
	</select>

	<!-- 根据 欠款Id 查找 -->
	<select id="selectByArrearId" resultMap="ResultShopRepaymentMap"  parameterType="java.lang.Long">
		select
			<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		where `arrear_id` = #{arrearId} and `status` = 0
	</select>

	<select id="selectByMemberId" resultMap="ResultShopRepaymentMap"  parameterType="map">
		select
		<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		where `member_id` = #{memberId}
		<if test="status != null">
			and `status` = #{status}
		</if>
	</select>

	<select id="selectByLikeAndObj" resultMap="ResultShopRepaymentMap"  parameterType="map">
		select
		<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		<where>
			<if test="record.id != null">
				and `id` like concat('%',#{record.id},'%')
			</if>
			<if test="record.arrearId != null">
				and `arrear_id` like concat('%',#{record.arrearId},'%')
			</if>
			<if test="record.money != null">
				and `money` like concat('%',#{record.money},'%')
			</if>
			<if test="record.actualPayment != null">
				and `actual_payment` like concat('%',#{record.actualPayment},'%')
			</if>
			<if test="record.status != null">
				and `status` like concat('%',#{record.status},'%')
			</if>
			<if test="record.repayType != null">
				and `repay_type` like concat('%',#{record.repayType},'%')
			</if>
			<if test="record.memberId != null">
				and `member_id` like concat('%',#{record.memberId},'%')
			</if>
			<if test="record.obj != null">
				and `obj` like concat('%',#{record.obj},'%')
			</if>
			<if test="record.remark != null">
				and `remark` like concat('%',#{record.remark},'%')
			</if>
			<if test="record.createTime != null">
				and `create_time` like concat('%',#{record.createTime},'%')
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="selectByObj" resultMap="ResultShopRepaymentMap"  parameterType="map">
		select
			<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		<where>
			<if test="record.id != null">
				and `id` = #{record.id}
			</if>
			<if test="record.arrearId != null">
				and `arrear_id` = #{record.arrearId}
			</if>
			<if test="record.money != null">
				and `money` = #{record.money}
			</if>
			<if test="record.actualPayment != null">
				and `actual_payment` = #{record.actualPayment}
			</if>
			<if test="record.status != null">
				and `status` = #{record.status}
			</if>
			<if test="record.repayType != null">
				and `repay_type` = #{record.repayType}
			</if>
			<if test="record.memberId != null">
				and `member_id` = #{record.memberId}
			</if>
			<if test="record.obj != null">
				and `obj` = #{record.obj}
			</if>
			<if test="record.remark != null">
				and `remark` = #{record.remark}
			</if>
			<if test="record.createTime != null">
				and `create_time` = #{record.createTime}
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="countByLike" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		select
		count(`id`)
		from `tb_shop_repayment`
		<where>
			<if test="id != null">
				and `id` like concat('%',#{id},'%')
			</if>
			<if test="arrearId != null">
				and `arrear_id` like concat('%',#{arrearId},'%')
			</if>
			<if test="money != null">
				and `money` like concat('%',#{money},'%')
			</if>
			<if test="actualPayment != null">
				and `actual_payment` like concat('%',#{actualPayment},'%')
			</if>
			<if test="status != null">
				and `status` like concat('%',#{status},'%')
			</if>
			<if test="repayType != null">
				and `repay_type` like concat('%',#{repayType},'%')
			</if>
			<if test="memberId != null">
				and `member_id` like concat('%',#{memberId},'%')
			</if>
			<if test="obj != null">
				and `obj` like concat('%',#{obj},'%')
			</if>
			<if test="remark != null">
				and `remark` like concat('%',#{remark},'%')
			</if>
			<if test="createTime != null">
				and `create_time` like concat('%',#{createTime},'%')
			</if>
		</where>
	</select>

	<select id="count" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.ShopRepayment">
		select
		count(`id`)
		from `tb_shop_repayment`
		<where>
			<if test="id != null">
				and `id` = #{id}
			</if>
			<if test="arrearId != null">
				and `arrear_id` = #{arrearId}
			</if>
			<if test="money != null">
				and `money` = #{money}
			</if>
			<if test="actualPayment != null">
				and `actual_payment` = #{actualPayment}
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
			<if test="repayType != null">
				and `repay_type` = #{repayType}
			</if>
			<if test="memberId != null">
				and `member_id` = #{memberId}
			</if>
			<if test="obj != null">
				and `obj` = #{obj}
			</if>
			<if test="remark != null">
				and `remark` = #{remark}
			</if>
			<if test="createTime != null">
				and `create_time` = #{createTime}
			</if>
		</where>
	</select>

	<select id="selectMulti" resultMap="ResultShopRepaymentMap"  parameterType="map">
		select
			<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		<where>
			<if test="memberId != null">
				and `member_id` = #{memberId}
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
			<if test="repayType != null">
				and `repay_type` = #{repayType}
			</if>
			<if test="money != null">
				and `money` like concat('%',#{money},'%')
			</if>
			<if test="actualPayment != null">
				and `actual_payment` like concat('%',#{actualPayment},'%')
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="countMulti" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.DO.ArrearDo">
		select
			count(`id`)
		from `tb_shop_repayment`
		<where>
			<if test="memberId != null">
				and `member_id` = #{memberId}
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
			<if test="repayType != null">
				and `repay_type` = #{repayType}
			</if>
			<if test="money != null">
				and `money` like concat('%',#{money},'%')
			</if>
			<if test="actualPayment != null">
				and `actual_payment` like concat('%',#{actualPayment},'%')
			</if>
		</where>
	</select>

	<!-- memberId,status,money,repayType,create_time -->
	<select id="selectByJoin" resultMap="result_shop_repayment_simple_map"  parameterType="map">
		select
		<include refid="Column_tb_shop_repayment_List"/>
		from `tb_shop_repayment`
		<where>
			<if test="arrear.memberId != null">
				and `member_id` = #{arrear.memberId}
			</if>
			<if test="arrear.status != null">
				and `status` = #{arrear.status}
			</if>
			<if test="arrear.minMoney != null">
				and `money` &gt;= #{arrear.minMoney}
			</if>
			<if test="arrear.maxMoney != null">
				and `money` &lt;= #{arrear.maxMoney}
			</if>
			<if test="arrear.repayType != null">
				and `repay_type` = #{arrear.repayType}
			</if>
			<if test="arrear.startTime != null">
				and `create_time` &gt;= #{arrear.startTime}
			</if>
			<if test="arrear.endTime != null">
				and `create_time` &lt;= #{arrear.endTime}
			</if>
		</where>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName} ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="countJoin" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.DO.ArrearDo">
		select
			count(`id`)
		from `tb_shop_repayment`
		<where>
			<if test="memberId != null">
				and `member_id` = #{memberId}
			</if>
			<if test="status != null">
				and `status` = #{status}
			</if>
			<if test="minMoney != null">
				and `money` &gt;= #{minMoney}
			</if>
			<if test="maxMoney != null">
				and `money` &lt;= #{maxMoney}
			</if>
			<if test="repayType != null">
				and `repay_type` = #{repayType}
			</if>
			<if test="startTime != null">
				and `create_time` &gt;= #{startTime}
			</if>
			<if test="endTime != null">
				and `create_time` &lt;= #{endTime}
			</if>
		</where>
	</select>

</mapper>
