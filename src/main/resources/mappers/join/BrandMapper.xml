<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.peyton.plum.mall.mapper.join.BrandMapper">
	<resultMap id="ResultBrandMap" type="cn.peyton.plum.mall.pojo.join.Brand">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="sup_id" property="supId" jdbcType="BIGINT"/>
		<result column="logo" property="logo" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="area" property="area" jdbcType="VARCHAR"/>
		<result column="seq" property="seq" jdbcType="SMALLINT"/>
		<result column="explain" property="explain" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="INTEGER"/>
		<association property="supplier" javaType="cn.peyton.plum.mall.pojo.party.Supplier"
					 column="sup_id" select="cn.peyton.plum.mall.mapper.party.SupplierMapper.selectByForeignKey" />
	</resultMap>
	<sql id="Column_tb_brand_List">
		`id`,`sup_id`,`logo`,`name`,`area`,`seq`,`explain`,`create_time`
	</sql>

	<!-- 下拉 -->
	<resultMap id="result_brand_simple_map" type="cn.peyton.plum.mall.pojo.join.Brand">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="logo" property="logo" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="area" property="area" jdbcType="VARCHAR"/>
	</resultMap>
	<sql id="column_brand_simple_list">
		`id`,`logo`,`name`,`area`
	</sql>

	<!-- 外键 -->
	<resultMap id="result_brand_foreign_key_map" type="cn.peyton.plum.mall.pojo.join.Brand">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="sup_id" property="supId" jdbcType="BIGINT"/>
		<result column="logo" property="logo" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="area" property="area" jdbcType="VARCHAR"/>
		<association property="supplier" javaType="cn.peyton.plum.mall.pojo.party.Supplier"
					 column="sup_id" select="cn.peyton.plum.mall.mapper.party.SupplierMapper.selectByForeignKey" />
	</resultMap>
	<sql id="column_brand_foreign_key_list">
		`id`,`sup_id`,`logo`,`name`,`area`
	</sql>

	<insert id="insertSelective" parameterType="cn.peyton.plum.mall.pojo.join.Brand" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
		insert into `tb_brand`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="supId != null">`sup_id`,</if>
			<if test="logo != null">`logo`,</if>
			<if test="name != null">`name`,</if>
			<if test="area != null">`area`,</if>
			<if test="seq != null">`seq`,</if>
			<if test="explain != null">`explain`,</if>
			<if test="createTime != null">`create_time`,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="supId != null">#{supId},</if>
			<if test="logo != null">#{logo},</if>
			<if test="name != null">#{name},</if>
			<if test="area != null">#{area},</if>
			<if test="seq != null">#{seq},</if>
			<if test="explain != null">#{explain},</if>
			<if test="createTime != null">#{createTime},</if>
		</trim>
	</insert>

	<update id="updateSelective" parameterType="cn.peyton.plum.mall.pojo.join.Brand">
		update `tb_brand`
		<set>
			<if test="supId != null">`sup_id` = #{supId},</if>
			<if test="logo != null">`logo` = #{logo},</if>
			<if test="name != null">`name` = #{name},</if>
			<if test="area != null">`area` = #{area},</if>
			<if test="seq != null">`seq` = #{seq},</if>
			<if test="explain != null">`explain` = #{explain},</if>
		</set>
		where id = #{id} and `is_del` = 1
	</update>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from `tb_brand`
		where `id` = #{id}
	</delete>

	<select id="repeat" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.Brand">
		select
		count(`id`)
		from `tb_brand`
		where `is_del` = 1
		<if test="id != null">
			and `id` != #{id}
		</if>
		<if test="name != null">
			and `name` = #{name}
		</if>
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultBrandMap"  parameterType="java.lang.Long">
		select
		<include refid="Column_tb_brand_List"/>
		from `tb_brand`
		where `id` = #{id} and `is_del` = 1
	</select>

	<select id="selectByForeignKey" resultMap="result_brand_foreign_key_map"  parameterType="java.lang.Long">
		select
		<include refid="column_brand_foreign_key_list"/>
		from `tb_brand`
		where `id` = #{id} and `is_del` = 1
	</select>

	<select id="selectByDownList" resultMap="result_brand_simple_map">
		select
			<include refid="column_brand_simple_list"/>
		from `tb_brand`
		where `is_del` = 1
	</select>

	<select id="selectAndroidRandom" resultMap="result_brand_simple_map" parameterType="int">
		select
		<include refid="column_brand_simple_list"/>
		from `tb_brand`
		where `is_del` = 1
		order by rand() limit #{limit}
	</select>

	<select id="selectByLikeAndObj" resultMap="ResultBrandMap" parameterType="map">
		select
		<include refid="Column_tb_brand_List"/>
		from `tb_brand`
		where `is_del` = 1
		<if test="record.supId != null">
			and `sup_id`= #{record.supId}
		</if>
		<if test="record.name != null">
			and `name` like concat('%',#{record.name},'%')
		</if>
		<if test="record.area != null">
			and `area` like concat('%',#{record.area},'%')
		</if>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName}   ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="selectByObj" resultMap="ResultBrandMap"  parameterType="map">
		select
		<include refid="Column_tb_brand_List"/>
		from `tb_brand`
		where `is_del` = 1
		<if test="record.supId != null">
			and `sup_id` = #{record.supId}
		</if>
		<if test="record.name != null">
			and `name` = #{record.name}
		</if>
		<if test="record.area != null">
			and `area` = #{record.area}
		</if>
		<if test="page.orderColumnName != null">
			order by ${page.orderColumnName}  ${page.orderMode}
		</if>
		<if test="page.orderColumnName == null">
			order by `id` ${page.orderMode}
		</if>
		<if test="page.enablePaging">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="countByLike" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.Brand">
		select
			count(`id`)
		from `tb_brand`
		where `is_del` = 1
		<if test="supId != null">
			and `sup_id`= #{supId}
		</if>
		<if test="name != null">
			and `name` like concat('%',#{name},'%')
		</if>
		<if test="area != null">
			and `area` like concat('%',#{area},'%')
		</if>
	</select>

	<select id="count" resultType = "java.lang.Integer" parameterType="cn.peyton.plum.mall.pojo.join.Brand">
		select
			count(`id`)
		from `tb_brand`
		where `is_del` = 1
		<if test="supId != null">
			and `sup_id` = #{supId}
		</if>
		<if test="name != null">
			and `name` = #{name}
		</if>
		<if test="area != null">
			and `area` = #{area}
		</if>
	</select>
	
	

</mapper>
